{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","className","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","onClick","TransactionList","length","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b3af904.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <h2>\n            Expense Tracker   \n        </h2>\n    )\n}\n\nexport default Header\n","// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state, action) => {\n    switch(action.type) {\n      case 'DELETE_TRANSACTION':\n        return {\n          ...state,\n          transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n        }\n        case 'ADD_TRANSACTION':\n            return{\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n      default:\n        return state;\n    }\n  }","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n//Initial state\nconst initialState = {\n    transactions: []\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    function deleteTransaction(id){\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n    function addTransaction(transaction){\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return(<GlobalContext.Provider value={{\n        transactions:state.transactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>)\n}","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState'\n\nconst Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transactions => transactions.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1 id='balance' className={total < 0 && 'minusTotal'}>${total}</h1>\n        </>\n    )\n}\n\nexport default Balance\n","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState'\n\nconst IncomeExpenses = () => {\n    const { transactions }= useContext(GlobalContext);\n\n    const amounts = transactions.map(transactions => transactions.amount);\n\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    const expense= (\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\n\n\n    return (\n        <div className='inc-exp-container'>\n            <div>\n                <h4>Income</h4>\n                <p className='money plus'>+${income}</p>\n            </div>\n            <div>  \n                <h4>Expense</h4>\n                <p className='money minus'>-${expense}</p>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default IncomeExpenses\n","import React, {useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst Transaction = ({ transaction }) => {\n    const {deleteTransaction} = useContext(GlobalContext)\n\n    const sign = transaction.amount < 0 ? '-' : '+';\n    return (\n            <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n                    {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className='delete-btn'>x</button>\n            </li>\n    )\n}\n\nexport default Transaction\n","import React, {useContext } from 'react';\nimport Transaction from './Transaction';\nimport { GlobalContext } from '../context/GlobalState'\n\nconst TransactionList = () => {\n    const { transactions }= useContext(GlobalContext);\n\n\n    return (\n        <>     \n            {transactions.length > 0 &&\n                <h3>History</h3>\n            }\n                \n            <ul className='list'>\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n            </ul>\n        </>\n    )\n}\n\nexport default TransactionList\n","import React, {useState, useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState';\n\nconst AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState()\n\n    const {addTransaction} = useContext(GlobalContext);\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: Math.floor(Math.random() * 1000000),\n            text,\n            amount: +amount\n        }\n        addTransaction(newTransaction);\n    }\n\n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className='form-control'>\n                    <label htmlFor='text'>Text</label>\n                    <input type='text' value={text} onChange={(e) => setText(e.target.value)} id='text' placeholder='Enter text...' />\n                </div>\n                <div className='form-control'>\n                    <label htmlFor='amount'\n                    >Amount <br />\n                    (negative - expense, positive - income)\n                    </label>\n                    <input type='number' value={amount} onChange={(e) => setAmount(e.target.value)} placeholder='Enter amount...' />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </>\n    )\n}\n\nexport default AddTransaction\n","\nimport './App.css';\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses'\nimport TransactionList from './components/TransactionList'\nimport AddTransaction from './components/AddTransaction'\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}